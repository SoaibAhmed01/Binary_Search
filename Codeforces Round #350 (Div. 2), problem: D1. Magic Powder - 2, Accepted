//Bismillahir Rahmanir Rahim
 //Soaib Ahmed
#include <bits/stdc++.h>

using namespace std;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define faster  ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define  ll       long long int
#define  ld       long long double
#define  int_out(x) printf("%d",x)
#define  sp       " "
#define  pb       push_back
#define  cinv     for(auto &i:v) cin >> i;
#define  vi       vector<int>
#define  vii      vector<ll>
#define  cout(v)  for(auto e:v) cout << e << sp;
#define  ma_x     100000007
#define  yes      cout << "YES" << endl
#define  no       cout << "NO" << endl
#define  case     "Case " << test++ << ": "
#define  all(v)   v.begin(), v.end()
#define  tst      int tst; int test=1; cin >> tst; while(tst--)
#define  Faster   ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define  nl       "\n"
#define sz(v)     (int)v.size()


//Driver code
vi a;
vi b;
bool possible(ll x,ll n,ll k)
{
    ll sum=k;
    for(int i=0;i<n;i++)
    {
        if(a[i]*x>b[i])
        {
            sum-=(a[i]*x-b[i]);
        }
        if(sum<0) return false;
    }
    return true;
}

int main()
{
   ll n,k;
   cin>>n>>k;
   a.resize(n);
   b.resize(n);

   for(int i=0;i<n;i++) cin>>a[i];
   for(int i=0;i<n;i++) cin>>b[i];

   ll low=1,high=1e10;
   ll ans=0;

   while(low<=high)
   {
       ll mid=low+(high-low)/2;
       ll sum=0;
       if(possible(mid,n,k))
       {
           ans=mid;
           low=mid+1;
       }
       else
       {
           high=mid-1;
       }
   }
   cout<<ans<<nl;



return 0;
}


